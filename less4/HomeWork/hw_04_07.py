# 7) Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
# При вызове функции должен создаваться объект-генератор.
# Функция должна вызываться следующим образом: for el in fact(n).
# Функция отвечает за получение факториала числа,
# а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.
# Подсказка: факториал числа n — произведение чисел от 1 до n.
# Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.


from sys import argv
from math import factorial


def help_me():
    print('скрипт принимает 1 параметр\n'
          'генерируюет факториалы целых чисел, начиная с 1! до number!\n'
          'первый параметр - number - целое число\n'
          'последующие параметры игнорируются')


def fact(number):
    """итератор, генерирующий факториалы целых чисел, начиная с 1! до number!

    :param number: конечное значение генератора (включитеьно)
    :return: итератор
    """
    yield [el for el in (factorial(param) for param in range(number + 1))]


try:
    print([i for i in fact(int(argv[1]))][0])
    if len(argv) > 2:
        print(f'последние параметры {argv[2:]} проигнорированы\n')
        help_me()
except ValueError:
    help_me()
except IndexError:
    help_me()
